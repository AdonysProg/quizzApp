{"version":3,"sources":["components/Cuestionario.js","components/timer/timer.component.jsx","App.js","index.js"],"names":["Cuestionario","showAnswer","handleNextPage","handleAnswer","data","question","correct_answer","answers","className","dangerouslySetInnerHTML","__html","map","answer","bgColor","onClick","Timer","props","minutes","seconds","App","useState","preguntas","setPreguntas","currentIndex","setcurrentIndex","score","setScore","badScore","setBadScore","setShowAnswer","setSeconds","setMinutes","isRunning","useEffect","fetch","then","res","json","results","sort","Math","random","incorrect_answers","window","setInterval","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNA6CeA,EA3CM,SAAC,GAKf,IAJLC,EAII,EAJJA,WACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,aAEI,IADJC,KAAQC,EACJ,EADIA,SAAUC,EACd,EADcA,eAAgBC,EAC9B,EAD8BA,QAGlC,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,sDACb,wBACEA,UAAU,uBACVC,wBAAyB,CAAEC,OAAOL,MAGtC,yBAAKG,UAAU,+BACZD,EAAQI,KAAI,SAACC,GACZ,IAAMC,EAAUZ,EACZW,IAAWN,EACT,eACA,GACF,WACJ,OACE,4BACEE,UAAS,UAAKK,EAAL,+DACTC,QAAS,kBAAMX,EAAaS,KAE3BA,OAKRX,GACC,4BACAa,QAASZ,EACTM,UAAU,sEAFV,eChCKO,G,MAAQ,SAACC,GACpB,OACE,6BACE,yBAAKR,UAAU,uBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,QACZQ,EAAMC,QADT,MACqBD,EAAME,cC6EtBC,MAhFf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAE2BF,mBAAS,GAFpC,mBAENG,EAFM,KAEQC,EAFR,OAGaJ,mBAAS,GAHtB,mBAGNK,EAHM,KAGCC,EAHD,OAImBN,mBAAS,GAJ5B,mBAINO,EAJM,KAIIC,EAJJ,OAKuBR,oBAAS,GALhC,mBAKNnB,EALM,KAKM4B,EALN,OAMiBT,mBAAS,GAN1B,mBAMNF,EANM,KAMGY,EANH,OAOiBV,mBAAS,GAP1B,mBAONH,EAPM,KAOGc,EAPH,OAQqBX,oBAAS,GAR9B,mBAQNY,EARM,KAgDb,OAhDa,KASbC,qBAAU,WACRC,MAAM,oBACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC/B,GACL,IAAMiB,EAAYjB,EAAKkC,QACpBC,MAAK,kBAAMC,KAAKC,SAAW,MAC3B9B,KAAI,SAACU,GAAD,mBAAC,eACDA,GADA,IAEHd,QAAS,CACPc,EAAUf,gBADH,mBAEJe,EAAUqB,oBACbH,MAAK,kBAAMC,KAAKC,SAAW,WAEjCnB,EAAaD,MAEbW,GACFW,OAAOC,aAAY,WACjBd,GAAW,SAACZ,GAAD,OAAaA,EAAU,OACjC,OAEJ,CAACc,IACAd,GAAW,KACba,EAAWd,EAAU,GACrBa,EAAW,IAgBNT,EAAUwB,OAAS,EACxB,yBAAKrC,UAAU,kBACb,kBAAC,EAAD,CAAOS,QAASA,EAASC,QAASA,IAClC,0BAAMV,UAAU,wDAAhB,YACYe,EAAe,EAD3B,OACkCF,EAAUwB,QAE3CtB,GAAgBF,EAAUwB,OACzB,yBAAKrC,UAAU,4BACb,kBAAC,EAAD,CAAOS,QAASA,EAASC,QAASA,IAClC,wBAAIV,UAAU,qFAAd,kBACkBiB,EADlB,6BAGA,6BACE,wBAAIjB,UAAU,+EAAd,eACemB,EADf,iBAMJ,kBAAC,EAAD,CACEvB,KAAMiB,EAAUE,GAChBpB,aAnCa,SAACS,GACfX,IACCW,IAAWS,EAAUE,GAAcjB,eACrCoB,EAASD,EAAQ,GAEjBG,EAAYD,EAAW,IAG3BE,GAAc,IA4BR3B,eA1Be,WACrB2B,GAAc,GACdL,EAAgBD,EAAe,IAyBzBtB,WAAYA,KAKlB,6BC7EJ6C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.d478442d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Cuestionario = ({\r\n  showAnswer,\r\n  handleNextPage,\r\n  handleAnswer,\r\n  data: { question, correct_answer, answers},\r\n}) => {\r\n  \r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <div className=\"bg-white text-purple-800 p-10 rounded-lg shadow-md\">\r\n        <h2\r\n          className=\"text-2xl text-center\"\r\n          dangerouslySetInnerHTML={{ __html:question }}\r\n        />\r\n      </div>\r\n      <div className=\"grid grid-cols-2 gap-6 mt-6\">\r\n        {answers.map((answer) => {\r\n          const bgColor = showAnswer\r\n            ? answer === correct_answer\r\n              ? \"bg-green-500\"\r\n              : \"\"\r\n            : \"bg-white\";\r\n          return (\r\n            <button\r\n              className={`${bgColor} p-4 text-purple-800 font-bold rounded shadow mb-4 bg-white`}\r\n              onClick={() => handleAnswer(answer)}\r\n            >\r\n              {answer}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n      {showAnswer && (\r\n        <button \r\n        onClick={handleNextPage}\r\n        className=\"ml-auto p-4 font-bold rounded shadow mb-4 bg-purple-700 text-white\">\r\n          Siguiente\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cuestionario;\r\n","import React from \"react\";\r\nimport \"./timer.style.css\";\r\n\r\nexport const Timer = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"time-circulo\">\r\n          <div className=\"time\">\r\n            {props.minutes} : {props.seconds}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Cuestionario } from \"./components\";\r\nimport { Timer } from \"./components/timer/timer.component\";\r\n\r\n//const API_URL = \"https://quizzgeoapi.herokuapp.com/preguntas\";\r\n\r\nfunction App() {\r\n  const [preguntas, setPreguntas] = useState([]);\r\n  const [currentIndex, setcurrentIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [badScore, setBadScore] = useState(0);\r\n  const [showAnswer, setShowAnswer] = useState(false);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [isRunning, setIsRunning] = useState(true);\r\n  useEffect(() => {\r\n    fetch(`./dataHidra.json`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const preguntas = data.results\r\n          .sort(() => Math.random() - 0.5)\r\n          .map((preguntas) => ({\r\n            ...preguntas,\r\n            answers: [\r\n              preguntas.correct_answer,\r\n              ...preguntas.incorrect_answers,\r\n            ].sort(() => Math.random() - 0.5),\r\n          }));\r\n        setPreguntas(preguntas);\r\n      });\r\n    if (isRunning) {\r\n      window.setInterval(() => {\r\n        setSeconds((seconds) => seconds + 1);\r\n      }, 1000);\r\n    }\r\n  }, [isRunning]);\r\n  if (seconds >= 60) {\r\n    setMinutes(minutes + 1);\r\n    setSeconds(0);\r\n  }\r\n  const handleAnswer = (answer) => {\r\n    if (!showAnswer) {\r\n      if (answer === preguntas[currentIndex].correct_answer) {\r\n        setScore(score + 1);\r\n      } else {\r\n        setBadScore(badScore + 1);\r\n      }\r\n    }\r\n    setShowAnswer(true);\r\n  };\r\n  const handleNextPage = () => {\r\n    setShowAnswer(false);\r\n    setcurrentIndex(currentIndex + 1);\r\n  };\r\n  return preguntas.length > 0 ? (\r\n    <div className=\"container my-4\">\r\n      <Timer minutes={minutes} seconds={seconds} />\r\n      <span className=\"p-3 bg-white rounded text-purple-900 font-bold mb-10\">\r\n        Pregunta {currentIndex + 1} de {preguntas.length}\r\n      </span>\r\n      {currentIndex >= preguntas.length ? (\r\n        <div className=\"h-screen m-20 resultados\">\r\n          <Timer minutes={minutes} seconds={seconds} /> \r\n          <h1 className=\"text-3xl text-white font-bold bg-green-500 p-10 rounded shadow-lg m-5 text-center\">\r\n            Has respondido {score} preguntas correctamente.\r\n          </h1>\r\n          <div>\r\n            <h1 className=\"text-3xl text-white font-bold bg-red-500 p-10 rounded shadow-lg text-center\">\r\n              Fallaste en {badScore} preguntas.\r\n            </h1>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Cuestionario\r\n          data={preguntas[currentIndex]}\r\n          handleAnswer={handleAnswer}\r\n          handleNextPage={handleNextPage}\r\n          showAnswer={showAnswer}\r\n        />\r\n      )}\r\n    </div>\r\n  ) : (\r\n    <p></p>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}