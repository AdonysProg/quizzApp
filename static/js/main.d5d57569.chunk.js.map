{"version":3,"sources":["components/Cuestionario.js","App.js","index.js"],"names":["Cuestionario","showAnswer","handleNextPage","handleAnswer","data","question","correct_answer","answers","className","dangerouslySetInnerHTML","__html","map","answer","bgColor","onClick","App","useState","preguntas","setPreguntas","currentIndex","setcurrentIndex","score","setScore","setShowAnswer","useEffect","fetch","then","res","json","results","incorrect_answers","sort","Math","random","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LA4CeA,EA1CM,SAAC,GAKf,IAJLC,EAII,EAJJA,WACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,aAEI,IADJC,KAAQC,EACJ,EADIA,SAAUC,EACd,EADcA,eAAgBC,EAC9B,EAD8BA,QAElC,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,sDACb,wBACEA,UAAU,uBACVC,wBAAyB,CAAEC,OAAQL,MAGvC,yBAAKG,UAAU,+BACZD,EAAQI,KAAI,SAACC,GACZ,IAAMC,EAAUZ,EACZW,IAAWN,EACT,eACA,GACF,WACJ,OACE,4BACEE,UAAS,UAAKK,EAAL,+DACTC,QAAS,kBAAMX,EAAaS,KAE3BA,OAKRX,GACC,4BACAa,QAASZ,EACTM,UAAU,sEAFV,eCyBOO,MAtDf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAE2BF,mBAAS,GAFpC,mBAENG,EAFM,KAEQC,EAFR,OAGaJ,mBAAS,GAHtB,mBAGNK,EAHM,KAGCC,EAHD,OAIuBN,oBAAS,GAJhC,mBAINf,EAJM,KAIMsB,EAJN,KAgCb,OA3BAC,qBAAU,WACRC,MAAM,eACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACtB,GACL,IAAMa,EAAYb,EAAKyB,QAAQlB,KAAI,SAACM,GAAD,mBAAC,eAC/BA,GAD8B,IAEjCV,QAAS,CACPU,EAAUX,gBADH,mBAEJW,EAAUa,oBACbC,MAAK,kBAAMC,KAAKC,SAAW,WAE/Bf,EAAaD,QAEhB,IAcIA,EAAUiB,OAAS,EACxB,yBAAK1B,UAAU,kBACZW,GAAgBF,EAAUiB,OACzB,yBAAK1B,UAAU,YACb,wBAAIA,UAAU,iCAAd,kBACkBa,EADlB,MAKF,kBAAC,EAAD,CACEjB,KAAMa,EAAUE,GAChBhB,aAxBa,SAACS,GACfX,GACCW,IAAWK,EAAUE,GAAcb,gBACrCgB,EAASD,EAAQ,GAGrBE,GAAc,IAmBRrB,eAhBe,WACrBqB,GAAc,GACdH,EAAgBD,EAAe,IAezBlB,WAAYA,KAKlB,6BClDJkC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.d5d57569.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Cuestionario = ({\r\n  showAnswer,\r\n  handleNextPage,\r\n  handleAnswer,\r\n  data: { question, correct_answer, answers },\r\n}) => {\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <div className=\"bg-white text-purple-800 p-10 rounded-lg shadow-md\">\r\n        <h2\r\n          className=\"text-2xl text-center\"\r\n          dangerouslySetInnerHTML={{ __html: question }}\r\n        />\r\n      </div>\r\n      <div className=\"grid grid-cols-2 gap-6 mt-6\">\r\n        {answers.map((answer) => {\r\n          const bgColor = showAnswer\r\n            ? answer === correct_answer\r\n              ? \"bg-green-500\"\r\n              : \"\"\r\n            : \"bg-white\";\r\n          return (\r\n            <button\r\n              className={`${bgColor} p-4 text-purple-800 font-bold rounded shadow mb-4 bg-white`}\r\n              onClick={() => handleAnswer(answer)}\r\n            >\r\n              {answer}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n      {showAnswer && (\r\n        <button \r\n        onClick={handleNextPage}\r\n        className=\"ml-auto p-4 font-bold rounded shadow mb-4 bg-purple-700 text-white\">\r\n          Siguiente\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cuestionario;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Cuestionario } from \"./components\";\n\nconst API_URL = \"https://quizzgeoapi.herokuapp.com/preguntas\";\n\nfunction App() {\n  const [preguntas, setPreguntas] = useState([]);\n  const [currentIndex, setcurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n  useEffect(() => {\n    fetch(`./data.json`)\n      .then((res) => res.json())\n      .then((data) => {\n        const preguntas = data.results.map((preguntas) => ({\n          ...preguntas,\n          answers: [\n            preguntas.correct_answer,\n            ...preguntas.incorrect_answers,\n          ].sort(() => Math.random() - 0.5),\n        }));\n        setPreguntas(preguntas);\n      });\n  }, []);\n  const handleAnswer = (answer) => {\n    if (!showAnswer) {\n      if (answer === preguntas[currentIndex].correct_answer) {\n        setScore(score + 1);\n      }\n    }\n    setShowAnswer(true);\n  };\n\n  const handleNextPage = () => {\n    setShowAnswer(false);\n    setcurrentIndex(currentIndex + 1);\n  };\n  return preguntas.length > 0 ? (\n    <div className=\"container my-4\">\n      {currentIndex >= preguntas.length ? (\n        <div className=\"h-screen\">\n          <h1 className=\"text-3xl text-white font-bold\">\n            Tu puntaje fue {score}.\n          </h1>\n        </div>\n      ) : (\n        <Cuestionario\n          data={preguntas[currentIndex]}\n          handleAnswer={handleAnswer}\n          handleNextPage={handleNextPage}\n          showAnswer={showAnswer}\n        />\n      )}\n    </div>\n  ) : (\n    <p></p>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}